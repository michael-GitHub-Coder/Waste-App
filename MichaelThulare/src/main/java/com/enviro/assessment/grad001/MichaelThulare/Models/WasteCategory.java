package com.enviro.assessment.grad001.MichaelThulare.Models;

import com.fasterxml.jackson.annotation.JsonManagedReference;
import jakarta.persistence.*;


import java.util.List;

@Entity
public class WasteCategory {

    @Id  // Marks the field as the primary key of the entity
    @GeneratedValue(strategy = GenerationType.IDENTITY)  // Specifies that the primary key is auto-generated by the database (using auto-increment)
    private Long id;

    @Column(nullable = false)  // Specifies that this field is a column in the database and cannot be null
    private String name;

    private String description;

    @JsonManagedReference  // Indicates that this is the "parent" side of the relationship and helps manage circular references during JSON serialization
    @OneToMany(mappedBy = "wasteCategory", cascade = CascadeType.ALL)  // Defines a one-to-many relationship between WasteCategory and DisposalGuideline
// 'mappedBy' refers to the field in the DisposalGuideline entity that owns the relationship (wasteCategory)
// 'cascade = CascadeType.ALL' means that operations (e.g., persist, delete) on WasteCategory will be cascaded to associated DisposalGuidelines
    private List<DisposalGuideline> disposalGuidelines;

    @JsonManagedReference  // Same as above for recyclingTips field
    @OneToMany(mappedBy = "wasteCategory", cascade = CascadeType.ALL)  // Defines a one-to-many relationship between WasteCategory and RecyclingTip
    private List<RecyclingTip> recyclingTips;


    // Getters and setters

    public Long getId() {
        return id;  // Getter method for the 'id' field, returns the unique identifier of the WasteCategory
    }

    public void setId(Long id) {
        this.id = id;  // Setter method for the 'id' field, sets the unique identifier of the WasteCategory
    }

    public String getName() {
        return name;  // Getter method for the 'name' field, returns the name of the WasteCategory
    }

    public void setName(String name) {
        this.name = name;  // Setter method for the 'name' field, sets the name of the WasteCategory
    }

    public String getDescription() {
        return description;  // Getter method for the 'description' field, returns the description of the WasteCategory
    }

    public void setDescription(String description) {
        this.description = description;  // Setter method for the 'description' field, sets the description of the WasteCategory
    }

    public List<DisposalGuideline> getDisposalGuidelines() {
        return disposalGuidelines;  // Getter method for the 'disposalGuidelines' field, returns the list of DisposalGuideline objects associated with this WasteCategory
    }

    public void setDisposalGuidelines(List<DisposalGuideline> disposalGuidelines) {
        this.disposalGuidelines = disposalGuidelines;  // Setter method for the 'disposalGuidelines' field, sets the list of DisposalGuideline objects for this WasteCategory
    }

    public List<RecyclingTip> getRecyclingTips() {
        return recyclingTips;  // Getter method for the 'recyclingTips' field, returns the list of RecyclingTip objects associated with this WasteCategory
    }

    public void setRecyclingTips(List<RecyclingTip> recyclingTips) {
        this.recyclingTips = recyclingTips;  // Setter method for the 'recyclingTips' field, sets the list of RecyclingTip objects for this WasteCategory
    }

}
